<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>blak notebook™</title>
  <style>
    body {
      background-color: #171f1f;
      color: #F7EDED;
      font-family: monospace;
      font-size: 16px;
      padding: 2rem;
      white-space: pre;
    }
    .green {
      color: #00cc66;
    }
    .blue-link {
      color: #0357FC;
      text-decoration: none;
    }
    .blue-link:hover {
      color: #BA04A7;
    }
    .hidden {
      display: none;
    }
    .cursor {
      display: inline-block;
      width: 1ch;
      animation: blink 1s steps(1) infinite;
      color: #00cc66;
    }
    @keyframes blink {
      0%, 50% { opacity: 1; }
      50.1%, 100% { opacity: 0; }
    }
  </style>
</head>
<body>
  <div id="terminal"></div>

  <script>
    const lines = [
      '<span class="green">b:\\games\\horror\\document&gt;dir</span>',
      '............................',
      '???,??? bytes [document.zip]',
      'blak notebook™ © 2025 [game]',
      'analog horror document ttrpg',
      '............................'
    ];

    const downloadLine = '<a href="https://www.dropbox.com/s/yourfile/document.zip?dl=1" class="blue-link">[ ↓ ] download document.zip</a>';
    const promptLine = '<span class="green">b:&gt;</span><span class="cursor">_</span>';

    const terminal = document.getElementById('terminal');

    let i = 0;

    function typeLine(line, callback) {
      let j = 0;
      const span = document.createElement('div');
      terminal.appendChild(span);

      const typer = setInterval(() => {
        span.innerHTML += line[j];
        j++;
        if (j >= line.length) {
          clearInterval(typer);
          callback();
        }
      }, 30);
    }

    function typeAllLines() {
      if (i < lines.length) {
        typeLine(lines[i], () => {
          i++;
          typeAllLines();
        });
      } else {
        // Delay, then type the download link
        setTimeout(() => {
          typeLine(downloadLine, () => {
            // Shorter delay, then show final prompt with blinking cursor
            setTimeout(() => {
              const div = document.createElement('div');
              div.innerHTML = promptLine;
              terminal.appendChild(div);
            }, 700);
          });
        }, 900);
      }
    }

    typeAllLines();
  </script>
</body>
</html>